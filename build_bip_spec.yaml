- type: Command
  name: "Update single BIP object (auto-find by name)"
  timeoutInSeconds: 600
  command: |
    set -euo pipefail

    : "${BIP_HOST:?Missing BIP_HOST}"
    : "${BIP_USER:?Missing BIP_USER}"
    : "${BIP_PASS:?Missing BIP_PASS}"
    : "${BIP_REPO_ROOT:?Missing BIP_REPO_ROOT}"   # ej: SAAS/BIP
    : "${BIP_OBJ_NAME:?Missing BIP_OBJ_NAME}"     # ej: testingPipelineDM
    : "${BIP_OBJ_PATH:?Missing BIP_OBJ_PATH}"     # ej: /Custom/KSY/DataModels/testingPipelineDM.xdm

    echo ">> Searching Object '${BIP_OBJ_NAME}' en ${BIP_REPO_ROOT} (.xdm/.xdmz/.xdo/.xdoz)"
    mapfile -t CANDIDATES < <(find "$BIP_REPO_ROOT" -type f \( -iname "${BIP_OBJ_NAME}.xdm" -o -iname "${BIP_OBJ_NAME}.xdmz" -o -iname "${BIP_OBJ_NAME}.xdo" -o -iname "${BIP_OBJ_NAME}.xdoz" \) | sort)

    if [ "${#CANDIDATES[@]}" -eq 0 ]; then
      echo "file not found for ${BIP_OBJ_NAME} in ${BIP_REPO_ROOT}"
      exit 1
    fi

    SRC="${CANDIDATES[0]}"
    echo ">> file: $SRC"

    normalize_src() {
      local src="$1"
      local lower="${src,,}"
      case "$lower" in
        *.xdmz)
          local tmpdir; tmpdir="$(mktemp -d)"
          local zipf="$tmpdir/obj.zip"
          cp "$src" "$zipf"
          unzip -qo "$zipf" -d "$tmpdir"
          local raw="$(find "$tmpdir" -maxdepth 1 -type f -iname "*.xdm" | head -n1)"
          [ -n "$raw" ] || { echo ".xdm file not found in $src"; return 1; }
          echo "$raw"
          ;;
        *.xdoz)
          local tmpdir; tmpdir="$(mktemp -d)"
          local zipf="$tmpdir/obj.zip"
          cp "$src" "$zipf"
          unzip -qo "$zipf" -d "$tmpdir"
          local raw="$(find "$tmpdir" -maxdepth 1 -type f -iname "*.xdo" | head -n1)"
          [ -n "$raw" ] || { echo ".xdo file not found in $src"; return 1; }
          echo "$raw"
          ;;
        *)
          echo "$src"
          ;;
      esac
    }

    RAW_FILE="$(normalize_src "$SRC")" || { echo "function failed"; exit 1; }
    echo ">> raw file for update: $RAW_FILE"

    # Converting to base64 (.xdm o .xdo)
    B64="$(base64 -w0 "$RAW_FILE" 2>/dev/null || base64 "$RAW_FILE" | tr -d '\n')"

    # build soap request
    SOAP_FILE="$(mktemp)"
    cat > "$SOAP_FILE" <<EOF
    cat > "$SOAP_FILE" <<EOF
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://xmlns.oracle.com/oxp/service/v2">
      <soapenv:Body>
        <v2:updateObject>
          <v2:objectAbsolutePath>${BIP_OBJ_PATH}</v2:objectAbsolutePath>
          <v2:objectData>${B64}</v2:objectData>
          <v2:userID>${BIP_USER}</v2:userID>
          <v2:password>${BIP_PASS}</v2:password>
        </v2:updateObject>
      </soapenv:Body>
    </soapenv:Envelope>
    EOF

    echo "== updating '${BIP_OBJ_PATH}' =="
    curl -f -s -S -u "${BIP_USER}:${BIP_PASS}" \
      -H "Content-Type: text/xml;charset=UTF-8" \
      -H 'SOAPAction: ""' \
      --data @"$SOAP_FILE" \
      "$BIP_HOST/xmlpserver/services/v2/CatalogService" >/dev/null

    echo "âœ” Update OK: ${BIP_OBJ_PATH}"
