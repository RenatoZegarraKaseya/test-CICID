version: 0.1
component: build
shell: bash

steps:
  - type: Command
    name: "OIC Integration upsert (.iar) with existence check (OAuth)"
    timeoutInSeconds: 1200
    command: |
      set -euo pipefail

      # ===== Required parameters =====
      : "${OIC_HOST:?Missing OIC_HOST}"                # e.g. https://design.integration.<region>.ocp.oraclecloud.com
      : "${OIC_INSTANCE_ID:?Missing OIC_INSTANCE_ID}"  # Service instance short name
      : "${INT_CODE:?Missing INT_CODE}"                # e.g. MY_INTEGRATION
      : "${INT_VERSION:?Missing INT_VERSION}"          # e.g. 01.00.0000
      : "${IAR_FILE:?Missing IAR_FILE}"                # e.g. PAAS/OIC/Integrations/MY_INTEGRATION_01.00.0000.iar
      : "${OAUTH_TOKEN_URL:?Missing OAUTH_TOKEN_URL}"
      : "${OAUTH_CLIENT_ID:?Missing OAUTH_CLIENT_ID}"
      : "${OAUTH_CLIENT_SECRET:?Missing OAUTH_CLIENT_SECRET}"
      : "${OAUTH_SCOPE:=}"                             # optional

      [ -f "$IAR_FILE" ] || { echo "‚ùå IAR file not found: $IAR_FILE"; exit 1; }

      echo ">> INT_CODE=$INT_CODE"
      echo ">> INT_VERSION=$INT_VERSION"
      echo ">> IAR_FILE=$IAR_FILE"

      INT_ID_ENC="${INT_CODE}%7C${INT_VERSION}"
      BASE="$OIC_HOST/ic/api/integration/v1"

      echo "== Getting OAuth2 token =="
      TOKEN=$(curl -s -X POST "$OAUTH_TOKEN_URL" \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "grant_type=client_credentials&client_id=$OAUTH_CLIENT_ID&client_secret=$OAUTH_CLIENT_SECRET&scope=$OAUTH_SCOPE" \
        | python3 -c "import sys,json; print(json.load(sys.stdin).get('access_token',''))")
      [ -n "$TOKEN" ] || { echo "‚ùå Could not obtain access_token"; exit 1; }

      echo "== Checking integration existence (GET /integrations/{id}) =="
      EXISTS_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Accept: application/json" \
        "$BASE/integrations/${INT_ID_ENC}?integrationInstance=${OIC_INSTANCE_ID}" || true)
      echo ">> HTTP $EXISTS_CODE"

      if [ "$EXISTS_CODE" = "200" ]; then
        echo "== Integration exists ‚Üí REPLACE via PUT /integrations/archive =="
        HTTP_CODE=$(curl -s -S -o /dev/null -w "%{http_code}" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Accept: application/json" \
          -X PUT "$BASE/integrations/archive?integrationInstance=${OIC_INSTANCE_ID}" \
          -F "file=@${IAR_FILE}" \
          -F "type=application/octet-stream")
        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "204" ]; then
          echo "‚úÖ Replace OK (HTTP $HTTP_CODE)"
        else
          echo "‚ùå Replace failed (HTTP $HTTP_CODE)"; exit 1
        fi

      elif [ "$EXISTS_CODE" = "404" ]; then
        echo "== Integration not found ‚Üí ADD via POST /integrations/archive =="
        HTTP_CODE=$(curl -s -S -o /dev/null -w "%{http_code}" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Accept: application/json" \
          -X POST "$BASE/integrations/archive?integrationInstance=${OIC_INSTANCE_ID}" \
          -F "file=@${IAR_FILE}" \
          -F "type=application/octet-stream")
        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ] || [ "$HTTP_CODE" = "204" ]; then
          echo "üÜï Add OK (HTTP $HTTP_CODE)"
        else
          echo "‚ùå Add failed (HTTP $HTTP_CODE)"; exit 1
        fi

      else
        echo "‚ùå Unexpected HTTP code on GET /integrations/{id}: $EXISTS_CODE"
        exit 1
      fi

      echo "‚úÖ Upsert completed"
