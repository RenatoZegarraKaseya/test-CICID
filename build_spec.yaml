version: 0.1
component: build
shell: bash

steps:
  - type: Command
    name: "Import & Activate OIC Integration (OAuth)"
    timeoutInSeconds: 1800
    command: |
      set -euo pipefail

      # Lee directamente los Parameters del pipeline
      : "${OIC_HOST:?Falta OIC_HOST (Parameter)}"
      : "${OIC_INSTANCE_ID:?Falta OIC_INSTANCE_ID (Parameter)}"
      : "${INT_CODE:?Falta INT_CODE (Parameter)}"
      : "${INT_VERSION:?Falta INT_VERSION (Parameter)}"
      : "${OAUTH_TOKEN_URL:?Falta OAUTH_TOKEN_URL (Parameter)}"
      : "${OAUTH_CLIENT_ID:?Falta OAUTH_CLIENT_ID (Parameter)}"
      : "${OAUTH_CLIENT_SECRET:?Falta OAUTH_CLIENT_SECRET (Parameter)}"
      : "${OAUTH_SCOPE:=}"   # puede ir vacío si no aplica

      echo ">> OIC_HOST=$OIC_HOST"
      echo ">> INT_CODE=$INT_CODE"
      echo ">> INT_VERSION=$INT_VERSION"

      INT_ID="${INT_CODE}%7C${INT_VERSION}"

      # Ruta esperada en RAÍZ (tu caso)
      IAR_FILE="./${INT_CODE}_${INT_VERSION}.iar"

      echo ">> Listando raíz del repo:"
      ls -la || true
      echo ">> Listando carpeta build/ (si existe):"
      ls -la build || true

      # Si no está en raíz con el nombre esperado, intenta autodetectar
      if [ ! -f "$IAR_FILE" ]; then
        if [ -f "./$(ls -1 *.iar 2>/dev/null | head -n1)" ]; then
          IAR_FILE="$(ls -1 *.iar | head -n1)"
          echo ">> Usando IAR detectado en raíz: $IAR_FILE"
        elif [ -f "build/$(ls -1 build/*.iar 2>/dev/null | head -n1)" ]; then
          IAR_FILE="$(ls -1 build/*.iar | head -n1)"
          echo ">> Usando IAR detectado en build/: $IAR_FILE"
        else
          echo "❌ No se encontró archivo .iar. Pon ${INT_CODE}_${INT_VERSION}.iar en raíz o en build/."
          exit 1
        fi
      fi
      echo ">> IAR final: $IAR_FILE"

      # ==== Obtener token OAuth ====
      TOKEN=$(curl -s -X POST "$OAUTH_TOKEN_URL" \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "grant_type=client_credentials&client_id=$OAUTH_CLIENT_ID&client_secret=$OAUTH_CLIENT_SECRET&scope=$OAUTH_SCOPE" \
        | python3 -c "import sys,json; print(json.load(sys.stdin)['access_token'])")

      if [ -z "$TOKEN" ]; then
        echo "❌ No se pudo obtener access_token"
        exit 1
      fi

      echo "== Importing IAR (POST con OAuth) =="
      curl -f -s -S -H "Authorization: Bearer $TOKEN" \
        -X POST "$OIC_HOST/ic/api/integration/v1/integrations/archive?integrationInstance=${OIC_INSTANCE_ID}" \
        -H "Accept: application/json" \
        -F "file=@${IAR_FILE}"
      echo "✔ Import completado"

      echo "== Activate Integration =="
      curl -f -s -S -H "Authorization: Bearer $TOKEN" \
        -H "X-HTTP-Method-Override: PATCH" \
        -H "Content-Type: application/json" \
        -d '{"status":"ACTIVATED"}' \
        -X POST "$OIC_HOST/ic/api/integration/v1/integrations/${INT_ID}?integrationInstance=${OIC_INSTANCE_ID}" \
        -H "Accept: application/json"
      echo "✅ Activación OK: ${INT_CODE} ${INT_VERSION}"
