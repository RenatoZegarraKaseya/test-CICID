version: 0.1
component: build
shell: bash

steps:
  - type: Command
    name: "Upsert OIC Library (PUT if exists, POST if not)"
    timeoutInSeconds: 1200
    command: |
      set -euo pipefail

      : "${OIC_HOST:?Missing OIC_HOST}"                # https://design.integration.<region>.ocp.oraclecloud.com
      : "${OIC_INSTANCE_ID:?Missing OIC_INSTANCE_ID}"
      : "${LIB_NAME:?Missing LIB_NAME}"                # e.g. EHC_CUSTOM_JS_FUNCTION
      : "${LIB_VERSION:?Missing LIB_VERSION}"          # e.g. 01.00.0000
      : "${LIB_FILE:?Missing LIB_FILE}"                # e.g. PAAS/OIC/Libraries/EHC_CUSTOM_JS_FUNCTION.zip
      : "${OAUTH_TOKEN_URL:?Missing OAUTH_TOKEN_URL}"
      : "${OAUTH_CLIENT_ID:?Missing OAUTH_CLIENT_ID}"
      : "${OAUTH_CLIENT_SECRET:?Missing OAUTH_CLIENT_SECRET}"
      : "${OAUTH_SCOPE:=}"

      [ -f "$LIB_FILE" ] || { echo "‚ùå Library file not found: $LIB_FILE"; exit 1; }

      BASE="$OIC_HOST/ic/api/integration/v1"
      LIB_ID_ENC="${LIB_NAME}%7C${LIB_VERSION}"

      echo "== Getting OAuth2 token =="
      TOKEN=$(curl -s -X POST "$OAUTH_TOKEN_URL" \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "grant_type=client_credentials&client_id=$OAUTH_CLIENT_ID&client_secret=$OAUTH_CLIENT_SECRET&scope=$OAUTH_SCOPE" \
        | python3 -c "import sys,json; print(json.load(sys.stdin).get('access_token',''))")
      [ -n "$TOKEN" ] || { echo "‚ùå Could not obtain access_token"; exit 1; }

      echo "== Checking if library exists: $LIB_NAME|$LIB_VERSION =="
      EXISTS_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Accept: application/json" \
        "$BASE/libraries/${LIB_ID_ENC}?integrationInstance=${OIC_INSTANCE_ID}" || true)

      echo ">> Library existence HTTP code: $EXISTS_CODE"

      if [ "$EXISTS_CODE" = "200" ]; then
        echo "== Library exists ‚Üí REPLACE via PUT =="
        RESP_FILE="$(mktemp)"
        HTTP_CODE=$(curl -s -S -o "$RESP_FILE" -w "%{http_code}" \
          -H "Authorization: Bearer $TOKEN" \
          -X PUT "$BASE/libraries/archive?integrationInstance=${OIC_INSTANCE_ID}" \
          -F "file=@${LIB_FILE}" \
          -F "type=application/octet-stream" || true)

        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "204" ]; then
          echo "‚úÖ Library replaced successfully ‚Äî HTTP $HTTP_CODE"
        else
          echo "‚ùå PUT failed ‚Äî HTTP $HTTP_CODE"
          sed -n '1,200p' "$RESP_FILE" || true
          rm -f "$RESP_FILE"
          exit 1
        fi
        rm -f "$RESP_FILE"

      elif [ "$EXISTS_CODE" = "404" ]; then
        echo "== Library not found ‚Üí CREATE via POST =="
        RESP_FILE="$(mktemp)"
        HTTP_CODE=$(curl -s -S -o "$RESP_FILE" -w "%{http_code}" \
          -H "Authorization: Bearer $TOKEN" \
          -X POST "$BASE/libraries/archive?integrationInstance=${OIC_INSTANCE_ID}" \
          -F "file=@${LIB_FILE}" \
          -F "type=application/octet-stream" || true)

        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ] || [ "$HTTP_CODE" = "204" ]; then
          echo "üÜï Library created successfully ‚Äî HTTP $HTTP_CODE"
        else
          echo "‚ùå POST failed ‚Äî HTTP $HTTP_CODE"
          sed -n '1,200p' "$RESP_FILE" || true
          rm -f "$RESP_FILE"
          exit 1
        fi
        rm -f "$RESP_FILE"

      else
        echo "‚ö†Ô∏è Unexpected response code: $EXISTS_CODE ‚Äî continuing as new library"
        curl -f -s -S -X POST \
          -H "Authorization: Bearer $TOKEN" \
          -F "file=@${LIB_FILE}" \
          -F "type=application/octet-stream" \
          "$BASE/libraries/archive?integrationInstance=${OIC_INSTANCE_ID}"
        echo "üÜï Created library as fallback"
      fi

      echo "‚úÖ Library upsert completed successfully"
